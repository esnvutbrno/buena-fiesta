version: '3.3'
services:
  web:
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./fiesta/:/usr/src/app/
      - ./conf/certs:/usr/share/certs
      - web_static_files:/usr/src/static
      - web_media_files:/usr/src/media
      - webpack_build:/usr/src/build
    expose:
      - 8000
    env_file:
      - ./fiesta/.env.base
    secrets:
      - .env
    build:
      context: .
      dockerfile: fiesta/Dockerfile
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=web.localhost
      - VIRTUAL_PORT=8000

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "127.0.0.1:15432:5432"
    environment:
      - POSTGRES_USER=fiesta
      - POSTGRES_PASSWORD=fiesta
      - POSTGRES_DB=fiesta
      - TZ=Europe/Prague

  webserver:
    build: ./nginx
    command: [ nginx-debug, '-g', 'daemon off;' ]
    expose:
      - 80
    volumes:
      - web_static_files:/static
      - web_media_files:/media
      - webpack_build:/build
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - web
    environment:
      - VIRTUAL_HOST=fiesta.localhost
      - VIRTUAL_PORT=80

  localproxy:
    image: nginxproxy/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
      - "3306:3306"
    volumes:
      - ./conf/certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro

  webpack:
    build: ./webpack
    command: dev
    expose:
      - 8003
    volumes:
      - ./webpack/:/usr/src/app
      - webpack_build:/usr/src/build
      # since tailwind need to access templates and all the stuff to dynamicaly strip classes
      # see more in webpack/tailwind.config.js
      - ./fiesta/:/usr/src/fiesta
    env_file:
      - ./webpack/.env.base
    environment:
      - VIRTUAL_HOST=webpack.localhost
      - VIRTUAL_PORT=8003
      - BUILD_DIR=/usr/src/build
      - NODE_ENV=development
      - PUBLIC_PATH=https://webpack.localhost/static/

  legacydb:
    image: mariadb:10.3
    profiles: [ "migration" ]
    volumes:
      - legacydb_data:/var/lib/mysql
      - ./legacy.sql:/docker-entrypoint-initdb.d/legacy.sql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: fiesta
      MYSQL_USER: fiesta
      MYSQL_PASSWORD: fiesta
      VIRTUAL_HOST: legacydb.localhost
      VIRTUAL_PORT: 3306
    expose:
      - 3306

  elastic:
    image: elasticsearch:7.17.0
    profiles: [ "wiki" ]
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
      # - ./conf/elastic:/usr/share/elasticsearch/config/
      - ./conf/certs:/usr/share/elasticsearch/config/certs
      - ./elastic/elastic.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./conf/elastic/elasticsearch.keystore:/usr/share/elasticsearch/config/elasticsearch.keystore
    ports:
      - "9200"

  kibana:
    image: kibana:7.17.0
    profiles: [ "wiki" ]
    depends_on:
      - elastic
    volumes:
      - ./elastic/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./conf/certs:/etc/kibana/certs
    ports:
      - "5601"
    environment:
      - VIRTUAL_HOST=kibana.localhost
      - VIRTUAL_PORT=5601

  wikifetcher:
    build: ./wiki
    profiles: [ "wiki" ]
    depends_on:
      - elastic
    volumes:
      - ./wiki/:/usr/src/app/
      - ./conf/certs:/usr/share/certs


secrets:
  .env:
    file: ./.env

volumes:
  postgres_data:
  elastic_data:
  legacydb_data:
  webpack_build:
  web_static_files:
  web_media_files:
