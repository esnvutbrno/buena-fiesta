"""
Django settings for fiesta project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

from decouple import AutoConfig

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# to load .env from folder, where docker stores secrets files
config = AutoConfig("/run/secrets/")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", cast=bool)

ALLOWED_HOSTS: list[str] = [".localhost", "127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    # Django native
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django.contrib.humanize",
    "django.forms",
    # Django 3rd party
    "polymorphic",
    "webpack_loader",
    "django_htmx",
    # Fiesta apps
    "apps.accounts.apps.AccountsConfig",
    "apps.esnaccounts",  # cannot have full config Path, since allauth/socialaccount/providers/__init__.py:38 sucks
    "apps.esncards.apps.ESNcardsConfig",
    "apps.fiestaforms.apps.FiestaformsConfig",
    "apps.plugins.apps.PluginsConfig",
    "apps.sections.apps.SectionsConfig",
    "apps.universities.apps.UniversitiesConfig",
    "apps.utils.apps.UtilsConfig",
    "apps.wiki.apps.WikiConfig",
    # Debugs
    "django_extensions",
    # django-allauth
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    # "allauth.socialaccount.providers.facebook",
    "allauth_cas",
]


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    # admin needs it
    "django.contrib.messages.middleware.MessageMiddleware",
    # TODO: replace by CSP
    # "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # 3rd party
    "django_htmx.middleware.HtmxMiddleware",
    # custom Fiesta
    "apps.sections.middleware.user_membership.UserMembershipMiddleware",
    "apps.plugins.middleware.plugin.CurrentPluginMiddleware",
    "apps.accounts.middleware.user_profile.UserProfileMiddleware",
]

ROOT_URLCONF = "fiesta.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [(BASE_DIR / "templates").as_posix()],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "fiesta.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "HOST": "db",
        "USER": "fiesta",
        "NAME": "fiesta",
        "PASSWORD": "fiesta",
    },
    "legacydb": {
        "ENGINE": "django.db.backends.mysql",
        "HOST": "legacydb",
        "NAME": "fiesta",
        # TODO: access to legacy db by standard user
        "USER": "root",
        "PASSWORD": "root",
    },
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_USER_MODEL = "accounts.User"

# TODO: check, which settings are needed & move to settings subpackage
AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
    "django.contrib.auth.hashers.ScryptPasswordHasher",
    "apps.accounts.hashers.LegacyBCryptSHA256PasswordHasher",
]

SITE_ID = 1

SECURE_PROXY_SSL_HEADER = "HTTP_X_FORWARDED_SSL", "on"

SOCIALACCOUNT_PROVIDERS = {
    "facebook": {
        "METHOD": "oauth2",
        "SDK_URL": "//connect.facebook.net/{locale}/sdk.js",
        "SCOPE": ["email", "public_profile"],
        # 'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        "INIT_PARAMS": {"cookie": True},
        "FIELDS": [
            "id",
            "first_name",
            "last_name",
            "name",
            "name_format",
            "picture",
            "short_name",
        ],
        "EXCHANGE_TOKEN": True,
        "LOCALE_FUNC": lambda request: "en",
        "VERIFIED_EMAIL": False,
        "VERSION": "v12.0",
    },
    "esnaccounts": {},
}

# configuration for fiesta accounts
ACCOUNT_AUTHENTICATION_METHOD = "username_email"  # email or username
ACCOUNT_SESSION_REMEMBER = None  # ask user for `remember`
ACCOUNT_ADAPTER = "apps.accounts.adapters.AccountAdapter"
ACCOUNT_EMAIL_REQUIRED = True  # email ftw
ACCOUNT_USERNAME_REQUIRED = False  # email ftw
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"
# social account settings
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_ADAPTER = "apps.accounts.adapters.SocialAccountAdapter"
# general django urls
LOGIN_URL = "/auth/login"
LOGIN_REDIRECT_URL = "/"

# fixme: verify it
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True  # False by default
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = True  # True by default
ACCOUNT_USERNAME_MIN_LENGTH = 4  # a personal preference

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"

STATIC_ROOT = config("STATIC_DIR")

STATICFILES_DIRS = [
    (BASE_DIR / "static").as_posix(),
    (BASE_DIR / "templates/static").as_posix(),
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CSRF_TRUSTED_ORIGINS = ["https://*.localhost"]

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = True

# DEBUG reasons
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

WEBPACK_LOADER = {
    "DEFAULT": {
        "CACHE": False,
        "BUNDLE_DIR_NAME": "./",  # must end with slash
        "STATS_FILE": (Path(config("BUILD_DIR")) / "webpack-stats.json").as_posix(),
        "INTEGRITY": not DEBUG,
    }
}

FORM_RENDERER = "django.forms.renderers.TemplatesSetting"


if DEBUG:
    INSTALLED_APPS.append("debug_toolbar")
    INTERNAL_IPS = type("ContainsAll", (), {"__contains__": lambda *_: True})()
    MIDDLEWARE.insert(1, "debug_toolbar.middleware.DebugToolbarMiddleware")
