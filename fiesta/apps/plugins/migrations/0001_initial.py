# Generated by Django 4.0.1 on 2022-01-22 23:56

import uuid

import django.db.models.deletion
import django_extensions.db.fields

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="BasePluginConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(default="default", max_length=64)),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "ordering": ("-modified", "-created"),
                "get_latest_by": "modified",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Plugin",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("enabled", "enabled"),
                            ("read_only", "read-only"),
                            ("disabled", "disabled"),
                        ],
                        default="enabled",
                        help_text="Current state of plugin - affects, if plugin could be displayed by "
                        "international/member/editor/admin/at all.",
                        max_length=16,
                        verbose_name="Plugin state",
                    ),
                ),
                (
                    "app_label",
                    models.CharField(
                        choices=[("accounts", "Accounts")],
                        help_text="Defines system application, which specific plugin represents.",
                        max_length=256,
                        verbose_name="App label",
                    ),
                ),
                (
                    "configuration",
                    models.ForeignKey(
                        blank=True,
                        help_text="Defines, in which configuration specific plugin runs.",
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="plugin",
                        to="plugins.basepluginconfiguration",
                        verbose_name="Plugin configuration",
                    ),
                ),
            ],
            options={
                "ordering": ("-modified", "-created"),
                "get_latest_by": "modified",
                "abstract": False,
            },
        ),
    ]
